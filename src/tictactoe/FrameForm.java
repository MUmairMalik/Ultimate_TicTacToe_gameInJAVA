/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import javax.swing.JOptionPane;

/**
 *
 * @author Umair
 */
public class FrameForm extends javax.swing.JFrame {

    /**
     * Creates new form FrameForm
     */
    private Frame[] game;  
    int[][] threeGames;//=new int[3][]; //used to win the whole frame
    
    public FrameForm() {
        initComponents();
        game = new Frame[9];
        threeGames=new int[3][];
        for(int i=3;i<3;i++)
        {
           threeGames[i]=new int[3];
         for(int j=3;j<3;j++)
         {
             threeGames[i][j]=0;
         }
           
        }
         
        for(int i=0;i<9;i++)
        {
         game[0]=new Frame();
        
        }
    }
       
       

    public FrameForm(Player pla) {
        initComponents();
        this.jLabel2.setText(pla.getName());
        this.jLabel6.setText(pla.getSymbol());
        game = new Frame[9];
        threeGames=new int[3][];
        for(int i=0;i<3;i++)
        {
           threeGames[i]=new int[3];
         for(int j=0;j<3;j++)
         {
             threeGames[i][j]=0;
         }
           
        }
        
        //Computer would always get first turn
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            for(int i=0;i<9;i++)
            {
                game[i]=new Frame();
               // game[i].playComputer(0);
            }
            
        else if(this.jLabel6.getText().equals("O"))
            for(int i=0;i<9;i++)
            {
                game[i]=new Frame();
                //p = game[i].playComputer(1);
            }
           
        
    }
    
//function used to check the winning of whole frame
     public boolean checkingWinFrame()
        {
            boolean check = false;
            for(int i=0; i<3; i++) {
                for(int j=0; j<3; j++) {
                    if(threeGames[i][j] == 1)
                        check = true;
                    else {
                        check = false;
                        break;
                    }
                }
                if(check)
                    return true;
            }
            
            //checking vertically
            check = false;
            for(int i=0; i<3; i++) {
                for(int j=0; j<3; j++) {
                    if(threeGames[j][i] == 1)
                        check = true;
                    else {
                        check = false;
                        break;
                    }
                }
                if(check)
                    return true;
            }
            
            //checking diagonal 1
            check = false;
            for(int i=0; i<3; i++) {
                if(threeGames[i][i] == 1)
                    check = true;
                else {
                    check = false;
                    break;
                }
            }
            if(check)
                return true;
            
            //checking diagonal 2
            check = false;
            int j=2;
            for(int i=0; i<3; i++) {
                if(threeGames[i][j] == 1)
                    check = true;
                else {
                    check = false;
                    break;
                }
                j--;
            }
            if(check)
                return true;
            
            return false; //no match found
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jButton65 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();
        jButton73 = new javax.swing.JButton();
        jButton74 = new javax.swing.JButton();
        jButton75 = new javax.swing.JButton();
        jButton76 = new javax.swing.JButton();
        jButton77 = new javax.swing.JButton();
        jButton78 = new javax.swing.JButton();
        jButton79 = new javax.swing.JButton();
        jButton80 = new javax.swing.JButton();
        jButton81 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton82 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Player Name:- ");

        jLabel2.setText("Default");

        jLabel3.setText("Total game,you won:");

        jButton1.setText("-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton17.setText("-");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton21.setText("-");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("-");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("-");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("-");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("-");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton30.setText("-");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jLabel5.setText("Player Symbol:");

        jLabel6.setText("X");

        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("-");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("-");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("-");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("-");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("-");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("-");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("-");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("-");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("-");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("-");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("-");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("-");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton18.setText("-");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton20.setText("-");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton26.setText("-");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("-");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton6.setText("-");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton28.setText("-");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("-");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton31.setText("-");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setText("-");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("-");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("-");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton36.setText("-");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton38.setText("-");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton39.setText("-");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton40.setText("-");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.setText("-");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jButton42.setText("-");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jButton43.setText("-");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton44.setText("-");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        jButton45.setText("-");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton46.setText("-");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setText("-");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jButton48.setText("-");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        jButton49.setText("-");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });

        jButton50.setText("-");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        jButton51.setText("-");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        jButton52.setText("-");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jButton53.setText("-");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        jButton54.setText("-");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        jButton55.setText("-");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });

        jButton37.setText("-");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jButton35.setText("-");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton56.setText("-");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });

        jButton57.setText("-");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });

        jButton58.setText("-");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });

        jButton59.setText("-");
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });

        jButton60.setText("-");
        jButton60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton60ActionPerformed(evt);
            }
        });

        jButton61.setText("-");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        jButton62.setText("-");
        jButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton62ActionPerformed(evt);
            }
        });

        jButton63.setText("-");
        jButton63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton63ActionPerformed(evt);
            }
        });

        jButton64.setText("-");
        jButton64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton64ActionPerformed(evt);
            }
        });

        jButton65.setText("-");
        jButton65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton65ActionPerformed(evt);
            }
        });

        jButton66.setText("-");
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });

        jButton67.setText("-");
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });

        jButton68.setText("-");
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });

        jButton69.setText("-");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });

        jButton70.setText("-");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });

        jButton71.setText("-");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });

        jButton72.setText("-");
        jButton72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton72ActionPerformed(evt);
            }
        });

        jButton73.setText("-");
        jButton73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton73ActionPerformed(evt);
            }
        });

        jButton74.setText("-");
        jButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton74ActionPerformed(evt);
            }
        });

        jButton75.setText("-");
        jButton75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton75ActionPerformed(evt);
            }
        });

        jButton76.setText("-");
        jButton76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton76ActionPerformed(evt);
            }
        });

        jButton77.setText("-");
        jButton77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton77ActionPerformed(evt);
            }
        });

        jButton78.setText("-");
        jButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton78ActionPerformed(evt);
            }
        });

        jButton79.setText("-");
        jButton79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton79ActionPerformed(evt);
            }
        });

        jButton80.setText("-");
        jButton80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton80ActionPerformed(evt);
            }
        });

        jButton81.setText("-");
        jButton81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton81ActionPerformed(evt);
            }
        });

        jLabel4.setText("0");

        jButton82.setText("-");
        jButton82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton82ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton24))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton82)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton30)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton17)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton23)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton28)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton29))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton31)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton32)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton33))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton34)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton37)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton36)))
                            .addGap(84, 84, 84)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton56)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton57))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton58)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton59)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton60))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton61)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton63)))
                        .addGap(85, 85, 85)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton27))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton10)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton55)
                        .addGap(18, 18, 18)
                        .addComponent(jButton38)
                        .addGap(18, 18, 18)
                        .addComponent(jButton39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton40)
                        .addGap(18, 18, 18)
                        .addComponent(jButton41)
                        .addGap(18, 18, 18)
                        .addComponent(jButton42))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton43)
                        .addGap(18, 18, 18)
                        .addComponent(jButton44)
                        .addGap(18, 18, 18)
                        .addComponent(jButton45))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton64)
                        .addGap(18, 18, 18)
                        .addComponent(jButton65)
                        .addGap(18, 18, 18)
                        .addComponent(jButton66))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton67)
                        .addGap(18, 18, 18)
                        .addComponent(jButton68)
                        .addGap(18, 18, 18)
                        .addComponent(jButton69))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton70)
                        .addGap(18, 18, 18)
                        .addComponent(jButton71)
                        .addGap(18, 18, 18)
                        .addComponent(jButton72)))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton16))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton26)))
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton73)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton74)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton75))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton48))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton51))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton54))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton76)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton77)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton78))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton79)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton80)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton81)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton21)
                                .addComponent(jButton82))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton5)
                                .addComponent(jButton7)
                                .addComponent(jButton27)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11)
                            .addComponent(jButton12)
                            .addComponent(jButton13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton14)
                            .addComponent(jButton15)
                            .addComponent(jButton16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton18)
                            .addComponent(jButton20)
                            .addComponent(jButton26))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton28)
                    .addComponent(jButton29)
                    .addComponent(jButton38)
                    .addComponent(jButton39)
                    .addComponent(jButton46)
                    .addComponent(jButton47)
                    .addComponent(jButton48)
                    .addComponent(jButton55))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton31)
                    .addComponent(jButton32)
                    .addComponent(jButton33)
                    .addComponent(jButton40)
                    .addComponent(jButton41)
                    .addComponent(jButton42)
                    .addComponent(jButton49)
                    .addComponent(jButton50)
                    .addComponent(jButton51))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton34)
                    .addComponent(jButton36)
                    .addComponent(jButton43)
                    .addComponent(jButton44)
                    .addComponent(jButton45)
                    .addComponent(jButton52)
                    .addComponent(jButton53)
                    .addComponent(jButton54)
                    .addComponent(jButton37))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton35)
                    .addComponent(jButton56)
                    .addComponent(jButton57)
                    .addComponent(jButton64)
                    .addComponent(jButton65)
                    .addComponent(jButton66)
                    .addComponent(jButton73)
                    .addComponent(jButton74)
                    .addComponent(jButton75))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton58)
                    .addComponent(jButton59)
                    .addComponent(jButton60)
                    .addComponent(jButton67)
                    .addComponent(jButton68)
                    .addComponent(jButton69)
                    .addComponent(jButton76)
                    .addComponent(jButton77)
                    .addComponent(jButton78))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton61)
                    .addComponent(jButton62)
                    .addComponent(jButton63)
                    .addComponent(jButton70)
                    .addComponent(jButton71)
                    .addComponent(jButton72)
                    .addComponent(jButton79)
                    .addComponent(jButton80)
                    .addComponent(jButton81))
                .addGap(145, 145, 145))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setComputer(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton1.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton24.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton17.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton82.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton30.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton21.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton25.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton22.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton23.setText(sym);
       }
    private void setComputer1(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton8.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton4.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton3.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton5.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton27.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton7.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton2.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton9.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton10.setText(sym);
       }
    
    private void setComputer2(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton11.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton12.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton13.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton14.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton15.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton16.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton18.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton20.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton26.setText(sym);
       }
    
     private void setComputer3(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton6.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton28.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton29.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton31.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton32.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton33.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton34.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton37.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton36.setText(sym);
       }
  
        private void setComputer4(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton55.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton38.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton39.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton40.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton41.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton42.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton43.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton44.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton45.setText(sym);
       }
        
       private void setComputer5(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton46.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton47.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton48.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton49.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton50.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton51.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton52.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton53.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton54.setText(sym);
       }   
       private void setComputer6(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton35.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton56.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton57.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton58.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton59.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton60.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton61.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton62.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton63.setText(sym);
       }  
       private void setComputer7(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton64.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton65.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton66.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton67.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton68.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton69.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton70.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton71.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton72.setText(sym);
       }  
       private void setComputer8(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton73.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton74.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton75.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton76.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton77.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton78.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton79.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton80.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton81.setText(sym);
       }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(this.jButton1.getText().equals("-"))
            this.jButton1.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        
        if(this.jButton17.getText().equals("-"))
            this.jButton17.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                 return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                 return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        
        if(this.jButton21.getText().equals("-"))
            this.jButton21.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        
        if(this.jButton22.getText().equals("-"))
            this.jButton22.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                      int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
        //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                  return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                      int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                 return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        
        if(this.jButton23.getText().equals("-"))
            this.jButton23.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                   return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                  return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        
        if(this.jButton24.getText().equals("-"))
            this.jButton24.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
             }
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        
        if(this.jButton25.getText().equals("-"))
            this.jButton25.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                  return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
             return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        
        if(this.jButton30.getText().equals("-"))
            this.jButton30.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                      int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                 return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                 return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
       if(this.jButton8.getText().equals("-"))
            this.jButton8.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
            return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        if(this.jButton4.getText().equals("-"))
            this.jButton4.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
        }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      if(this.jButton3.getText().equals("-"))
            this.jButton3.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 if(this.jButton5.getText().equals("-"))
            this.jButton5.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
           }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
 if(this.jButton7.getText().equals("-"))
            this.jButton7.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
          return;
          }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
             return;
           }
        }   
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

 if(this.jButton2.getText().equals("-"))
            this.jButton2.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(2,0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(2,0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
             return;
           }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

 if(this.jButton9.getText().equals("-"))
            this.jButton9.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(2,1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(2,1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
         if(this.jButton10.getText().equals("-"))
            this.jButton10.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
        
            }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

   if(this.jButton11.getText().equals("-"))
            this.jButton11.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed



   if(this.jButton12.getText().equals("-"))
            this.jButton12.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed


   if(this.jButton13.getText().equals("-"))
            this.jButton13.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
               int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
          return;
          }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed

        
   if(this.jButton14.getText().equals("-"))
            this.jButton14.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         
           //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
           }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed

        
   if(this.jButton15.getText().equals("-"))
            this.jButton15.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(1,1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(1,1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed


        
   if(this.jButton16.getText().equals("-"))
            this.jButton16.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(1,2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(1,2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }   return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed

        
   if(this.jButton18.getText().equals("-"))
            this.jButton18.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
               return;
         }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
             return;
           }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
             return;
           }
        }

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed

   if(this.jButton20.getText().equals("-"))
            this.jButton20.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
        //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }  return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            return;
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed


   if(this.jButton26.getText().equals("-"))
            this.jButton26.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[2].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[2].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
           //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }      this.jLabel4.setText(String.valueOf( score) );
           return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
        
            }
        }
        
        if(game[2].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[2].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[2].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer2(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer2(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[2].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[2].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }

    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed

    if(this.jButton27.getText().equals("-"))
            this.jButton27.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[1].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[1].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                 int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[0][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
               return;
         }
        }
        
        if(game[1].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[1].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[1].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer1(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer1(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[1].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[1].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    
    if(this.jButton6.getText().equals("-"))
            this.jButton6.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
               int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
         
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed

    if(this.jButton32.getText().equals("-"))
            this.jButton32.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
    //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
      //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                     return;
         }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
       
    if(this.jButton28.getText().equals("-"))
            this.jButton28.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed

    if(this.jButton29.getText().equals("-"))
            this.jButton29.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                  int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
      
    if(this.jButton31.getText().equals("-"))
            this.jButton31.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }     // TODO add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed

    if(this.jButton33.getText().equals("-"))
            this.jButton33.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
          }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed

    if(this.jButton34.getText().equals("-"))
            this.jButton34.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                     int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                    int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
          }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
           return;
         }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
              return;
          }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed

    if(this.jButton36.getText().equals("-"))
            this.jButton36.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                  return;
        
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
 if(this.jButton48.getText().equals("-"))
        {    this.jButton48.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
         return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
         return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
 if(this.jButton52.getText().equals("-"))
        {    this.jButton52.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
     return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
          return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
 if(this.jButton53.getText().equals("-"))
        {    this.jButton53.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(2,1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
     return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
         if(this.jButton37.getText().equals("-"))
            this.jButton37.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[3].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[3].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
               int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          
                //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
    }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
  
            }
        }
        
        if(game[3].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[3].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[3].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer3(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer3(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[3].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[3].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        } // TODO add your handling code here:
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
    if(this.jButton55.getText().equals("-"))
            this.jButton55.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                  return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }           // TODO add your handling code here:
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        if(this.jButton58.getText().equals("-"))
        {    this.jButton58.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton58ActionPerformed

    private void jButton76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton76ActionPerformed
       if(this.jButton76.getText().equals("-"))
        {    this.jButton76.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton76ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
if(this.jButton40.getText().equals("-"))
            this.jButton40.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                 return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
if(this.jButton38.getText().equals("-"))
            this.jButton38.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
              return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
if(this.jButton39.getText().equals("-"))
            this.jButton39.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
if(this.jButton41.getText().equals("-"))
            this.jButton41.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
             return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
              return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
if(this.jButton42.getText().equals("-"))
            this.jButton42.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
if(this.jButton43.getText().equals("-"))
            this.jButton43.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
if(this.jButton44.getText().equals("-"))
            this.jButton44.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
             return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                    return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
if(this.jButton45.getText().equals("-"))
            this.jButton45.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[4].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[4].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[1][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                    return;
        
            }
        }
        
        if(game[4].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[4].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[4].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer4(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer4(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[4].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[4].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        if(this.jButton46.getText().equals("-"))
        {    this.jButton46.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
        //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
  
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
        //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
             return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }               // TODO add your handling code here:
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
 if(this.jButton47.getText().equals("-"))
        {    this.jButton47.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                 //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
   return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
       return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
 if(this.jButton49.getText().equals("-"))
        {    this.jButton49.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
           return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
 if(this.jButton50.getText().equals("-"))
        {    this.jButton50.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
     return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
         return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
 if(this.jButton51.getText().equals("-"))
        {    this.jButton51.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(1,2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
      return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
       return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
 if(this.jButton54.getText().equals("-"))
        {    this.jButton54.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[5].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[5].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
     return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[1][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
      return;
        
            }
        }
        
        if(game[5].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[5].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[5].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer5(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer5(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[5].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[5].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
 if(this.jButton35.getText().equals("-"))
        {    this.jButton35.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
          return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
if(this.jButton56.getText().equals("-"))
        {    this.jButton56.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
       //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton56ActionPerformed

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
if(this.jButton57.getText().equals("-"))
        {    this.jButton57.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
       //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
        //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
if(this.jButton59.getText().equals("-"))
        {    this.jButton59.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jButton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton60ActionPerformed
    if(this.jButton60.getText().equals("-"))
        {    this.jButton60.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton60ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
if(this.jButton61.getText().equals("-"))
        {    this.jButton61.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton62ActionPerformed
    if(this.jButton62.getText().equals("-"))
        {    this.jButton62.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
       //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton62ActionPerformed

    private void jButton63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton63ActionPerformed
    if(this.jButton63.getText().equals("-"))
        {    this.jButton63.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[6].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[6].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
       //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
         //winning of whole frame
                threeGames[2][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                   return;
        
            }
        }
        
        if(game[6].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[6].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[6].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer6(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer6(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[6].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[6].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton63ActionPerformed

    private void jButton64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton64ActionPerformed
     if(this.jButton64.getText().equals("-"))
        {    this.jButton64.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
            return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton64ActionPerformed

    private void jButton65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton65ActionPerformed
     if(this.jButton65.getText().equals("-"))
        {    this.jButton65.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton65ActionPerformed

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton66ActionPerformed
     if(this.jButton66.getText().equals("-"))
        {    this.jButton66.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton66ActionPerformed

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton67ActionPerformed
     if(this.jButton67.getText().equals("-"))
        {    this.jButton67.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton67ActionPerformed

    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
     if(this.jButton68.getText().equals("-"))
        {    this.jButton68.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton68ActionPerformed

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton69ActionPerformed
     if(this.jButton69.getText().equals("-"))
        {    this.jButton69.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton69ActionPerformed

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton70ActionPerformed
     if(this.jButton70.getText().equals("-"))
        {    this.jButton70.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton70ActionPerformed

    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
     if(this.jButton71.getText().equals("-"))
        {    this.jButton71.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton71ActionPerformed

    private void jButton72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton72ActionPerformed
     if(this.jButton72.getText().equals("-"))
        {    this.jButton72.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[7].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[7].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
           //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][1]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[7].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[7].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[7].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer7(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer7(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[7].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[7].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton72ActionPerformed

    private void jButton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton73ActionPerformed
     if(this.jButton73.getText().equals("-"))
        {    this.jButton73.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton73ActionPerformed

    private void jButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton74ActionPerformed
     if(this.jButton74.getText().equals("-"))
        {    this.jButton74.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                   return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
            //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                    return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton74ActionPerformed

    private void jButton75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton75ActionPerformed
     if(this.jButton75.getText().equals("-"))
        {    this.jButton75.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                 //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton75ActionPerformed

    private void jButton77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton77ActionPerformed
     if(this.jButton77.getText().equals("-"))
        {    this.jButton77.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton77ActionPerformed

    private void jButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton78ActionPerformed
     if(this.jButton78.getText().equals("-"))
        {    this.jButton78.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                   return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton78ActionPerformed

    private void jButton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton79ActionPerformed
     if(this.jButton79.getText().equals("-"))
        {    this.jButton79.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                  //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
              return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton79ActionPerformed

    private void jButton80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton80ActionPerformed
     if(this.jButton80.getText().equals("-"))
        {    this.jButton80.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
                //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
               return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
               //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton80ActionPerformed

    private void jButton81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton81ActionPerformed
     if(this.jButton81.getText().equals("-"))
        {    this.jButton81.setText(this.jLabel6.getText());
        }
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[8].setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[8].setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
             int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                 return;
         }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
            int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
              //winning of whole frame
                threeGames[2][2]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                } 
                  return;
        
            }
        }
        
        if(game[8].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[8].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[8].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer8(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer8(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[8].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                return;
        }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[8].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
               return;
         }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton81ActionPerformed

    private void jButton82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton82ActionPerformed
     
        if(this.jButton82.getText().equals("-"))
            this.jButton82.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game[0].setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game[0].setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                   int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
             //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                      int score=Integer.parseInt(this.jLabel4.getText());
                score++;
                this.jLabel4.setText(String.valueOf( score) );
          //winning of whole frame
                threeGames[0][0]=1;
                if(checkingWinFrame())
                {
                    JOptionPane.showMessageDialog(this, "Congratulations!!! YOU HAVE WON THE ULTIMATE TICTACTOE.", "YOU WIN", 2);
                    this.setVisible(false);                    
                }
                return;
            }
        }
        
        if(game[0].checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game[0].playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game[0].playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game[0].checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game[0].checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
            return;
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton82ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JButton jButton73;
    private javax.swing.JButton jButton74;
    private javax.swing.JButton jButton75;
    private javax.swing.JButton jButton76;
    private javax.swing.JButton jButton77;
    private javax.swing.JButton jButton78;
    private javax.swing.JButton jButton79;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton80;
    private javax.swing.JButton jButton81;
    private javax.swing.JButton jButton82;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
