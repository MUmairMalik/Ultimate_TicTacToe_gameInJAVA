/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import javax.swing.JOptionPane;

/**
 *
 * @author Hamza
 */
public class GameForm extends javax.swing.JFrame {

    /**
     * Creates new form GameForm
     */
    private Game game;
    public GameForm() {
        initComponents();
        game = new Game();
    }

    public GameForm(PlayerInfo pla) {
        initComponents();
        this.jLabel2.setText(pla.getName());
        this.jLabel6.setText(pla.getSymbol());
        game = new Game();
        
        //Computer would always get first turn
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Player Name:- ");

        jLabel2.setText("Default");

        jLabel3.setText("Turn:- ");

        jLabel4.setText("Computer");

        jButton1.setText("-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton17.setText("-");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("-");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("-");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("-");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("-");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("-");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("-");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("-");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("-");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("-");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("-");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("-");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("-");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("-");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("-");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jLabel5.setText("Player Symbol:");

        jLabel6.setText("X");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setComputer(Point p, String sym) {
        if(p.getRow() == 0 && p.getCol() == 0)
            this.jButton1.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 1)
            this.jButton24.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 2)
            this.jButton17.setText(sym);
        else if(p.getRow() == 0 && p.getCol() == 3)
            this.jButton18.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 0)
            this.jButton19.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 1)
            this.jButton30.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 2)
            this.jButton21.setText(sym);
        else if(p.getRow() == 1 && p.getCol() == 3)
            this.jButton29.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 0)
            this.jButton25.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 1)
            this.jButton22.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 2)
            this.jButton23.setText(sym);
        else if(p.getRow() == 2 && p.getCol() == 3)
            this.jButton20.setText(sym);
        else if(p.getRow() == 3 && p.getCol() == 0)
            this.jButton27.setText(sym);
        else if(p.getRow() == 3 && p.getCol() == 1)
            this.jButton26.setText(sym);
        else if(p.getRow() == 3 && p.getCol() == 2)
            this.jButton28.setText(sym);
        else if(p.getRow() == 3 && p.getCol() == 3)
            this.jButton31.setText(sym);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(this.jButton1.getText().equals("-"))
            this.jButton1.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(0, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(0, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        
        if(this.jButton17.getText().equals("-"))
            this.jButton17.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(0, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(0, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        
        if(this.jButton18.getText().equals("-"))
            this.jButton18.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(0, 3, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(0, 3, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        
        
        if(this.jButton19.getText().equals("-"))
            this.jButton19.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(1, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(1, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        
        if(this.jButton20.getText().equals("-"))
            this.jButton20.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(2, 3, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(2, 3, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        
        if(this.jButton21.getText().equals("-"))
            this.jButton21.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(1, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(1, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        
        if(this.jButton22.getText().equals("-"))
            this.jButton22.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(2, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(2, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        
        if(this.jButton23.getText().equals("-"))
            this.jButton23.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(2, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(2, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        
        if(this.jButton24.getText().equals("-"))
            this.jButton24.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(0, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(0, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        
        if(this.jButton25.getText().equals("-"))
            this.jButton25.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(2, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(2, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        
        if(this.jButton26.getText().equals("-"))
            this.jButton26.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(3, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(3, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        
        if(this.jButton27.getText().equals("-"))
            this.jButton27.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(3, 0, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(3, 0, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        
        if(this.jButton28.getText().equals("-"))
            this.jButton28.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(3, 2, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(3, 2, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        
        if(this.jButton29.getText().equals("-"))
            this.jButton29.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(1, 3, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(1, 3, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        
        if(this.jButton30.getText().equals("-"))
            this.jButton30.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(1, 1, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(1, 1, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        
        if(this.jButton31.getText().equals("-"))
            this.jButton31.setText(this.jLabel6.getText());
        else {
            JOptionPane.showMessageDialog(this, "This Block Has Already Been Selected.\nKindly Select An Empty One");
            return;
        }
        
        if(this.jLabel6.getText().equals("X"))
            game.setGrid(3, 3, 1);
        else if(this.jLabel6.getText().equals("O"))
            game.setGrid(3, 3, 0);
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Congratulations!!! You have won this match.", "YOU WIN", 2);
                this.setVisible(false);
                return;
            }
        }
        
        if(game.checkDraw()) {
            JOptionPane.showMessageDialog(this, "The Match Has Been Drawn.", "DRAW", 1);
            this.setVisible(false);
            return;
        }
        
        //computer
        Point p = null;
        if(this.jLabel6.getText().equals("X"))
            p = game.playComputer(0);
        else if(this.jLabel6.getText().equals("O"))
            p = game.playComputer(1);
        
        if(p != null) {
            if(this.jLabel6.getText().equals("X"))
                this.setComputer(p, "O");
            else if(this.jLabel6.getText().equals("O"))
                this.setComputer(p, "X");
        }
        
        if(this.jLabel6.getText().equals("X")) {
            if(game.checkWin(0)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
        else if(this.jLabel6.getText().equals("O")) {
            if(game.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Sorry, You Have Lost The Match.", "YOU LOSE", 2);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
